@implements IDisposable
@inject IShoppingCartService ShoppingCartService
<div class="top-row ps-3 navbar navbar-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href=""> <span class="fas fa-shopping-cart" aria-hidden="true"/>&nbsp;ShopOnline </a>
    <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
      <span class="navbar-toggler-icon"/>
    </button>
  </div>
</div>

<div class="@NavMenuCssClass "@onclick="ToggleNavMenu">
  <nav class="flex-column">
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="oi oi-home" aria-hidden="true"/> Home
      </NavLink>
    </div>
    <ProductCategoriesNavMenu/>
    <div class="nav-item px-3 d-sm-none">
      <NavLink class="nav-link" href="ShoppingCart">
        <span class="oi oi-cart" aria-hidden="true"/> Shopping Cart (@ShoppingCartItemCount)
      </NavLink>
    </div>
  </nav>
</div>

@code {
  private bool _collapseNavMenu = true;

  private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

  private void ToggleNavMenu()
  {
    _collapseNavMenu = !_collapseNavMenu;
  }
  protected override void OnInitialized()
  {
    ShoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
  }
  private void ShoppingCartChanged(int totalQty)
  {
    ShoppingCartItemCount = totalQty;
    StateHasChanged();
  }
  private int ShoppingCartItemCount { get; set; }
  public void Dispose()
  {
    ShoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
  }
}
